@page "/Create"
@using SuggestionAppUI.Models
@using SuggestionAppLibrary.Models
@using SuggestionAppUI.Components
@inject ICategoryData categoryData
@inject ISuggestionData suggestionData
@inject IUserData userData
@inject NavigationManager navManager

<h1>Make A Suggestion</h1>

<div>
    <div>
        <div>
            <button @onclick="ClosePage" class="btn btn-danger" type="button">X Icon here</button>
        </div>
        @if(categories is not null)
        {
            <EditForm Model="suggestion" OnValidSubmit="CreateSuggestion">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div>
                    <label for="suggestion-text">Suggestion</label>
                    <div>Focus on the topic or technology you want to learn about.</div>
                    <InputText id="suggestion-text" @bind-Value="suggestion.Suggestion"></InputText>
                </div>

                <div>
                    <label for="category">Category</label>
                    <div>Choose A Category</div>
                    <div>
                        <ExtendedInputRadioGroup id="category" @bind-Value="suggestion.CategoryId">
                            @foreach(var c in categories)
                            {
                               <div>
                                   <InputRadio Value="@c.CategoryId" id="@c.CategoryId" />
                                   <label for="@c.CategoryId">@c.CategoryName - @c.CategoryDescription</label>
                               </div>
                            }
                        </ExtendedInputRadioGroup>
                    </div>
                </div>

                <div>
                    <label for="description">Description</label>
                    <div>Focus on the topic or technology you want to learn about.</div>
                    <InputTextArea id="description" @bind-Value="suggestion.Description"></InputTextArea>
                </div>

                <div>
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>

            </EditForm>
        }
    </div>
</div>

@code {

    private CreateSuggestionModel suggestion = new CreateSuggestionModel();
    private List<Category> categories;
    private User loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        categories = await categoryData.GetCategoriesAsync();

        //TODO - replace with user lookup.
        //loggedInUser = await userData.GetUserFromAuthentication();
        loggedInUser = new User
            {
                FirstName = "Sample",
                LastName = "Sample",
                DisplayName = "SS",
                Email = "sample@test.com",
                ObjectIdentifier = "abc-123",
                UserId = "1"
            };
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private async Task CreateSuggestion()
    {
        Suggestion s = new Suggestion();

        s.SuggestionText = suggestion.Suggestion;
        s.Description = suggestion.Description;
        s.Author = new BasicUser(loggedInUser);
        s.Category = categories.Where(c => c.CategoryId == suggestion.CategoryId).FirstOrDefault();

        if(s.Category is null)
        {
            suggestion.CategoryId = "";
            return;
        }

        await suggestionData.CreateSuggestionAsync(s);

        //this is to clear the form
        suggestion = new CreateSuggestionModel();
        ClosePage();
    }

}

